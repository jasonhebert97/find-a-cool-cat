{"version":3,"sources":["List.jsx","SortedListByAge.jsx","FilteredListByHabitat.jsx","FilteredListByGenderPresentation.jsx","SearchByName.jsx","App.js","serviceWorker.js","index.js","images sync /^/.//.*/.png$","images/Amber.png","images/Billabong.png","images/Chesty.png","images/Cloud.png","images/Felicity.png","images/Fletcher.png","images/Gonzales.png","images/Izzy.png","images/Lionel.png","images/Nugget.png","images/Pickle.png","images/Pnut.png","images/Roxy.png","images/Snoozy.png","images/Tora.png"],"names":["List","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","map","item","react_default","a","createElement","className","class","src","require","name","age","sex","breed","habitat","renderList","Component","SortedListByAge","onDropDownChoice","eventKey","setState","btnState","sortingMethod","sortItems","sort","b","Fragment","DropdownButton","bsStyle","title","MenuItem","onSelect","divider","src_List","FilteredListByHabitat","filterItem","search","filterDisplay","src_SortedListByAge","filter","FilteredListByGenderPresentation","onDropdownChoice","displayText","src_FilteredListByHabitat","SearchByName","onSearch","event","target","value","trim","toLowerCase","type","placeholder","onChange","src_FilteredListByGenderPresentation","cats","App","src_SearchByName","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","./Amber.png","./Billabong.png","./Chesty.png","./Cloud.png","./Felicity.png","./Fletcher.png","./Gonzales.png","./Izzy.png","./Lionel.png","./Nugget.png","./Pickle.png","./Pnut.png","./Roxy.png","./Snoozy.png","./Tora.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","resolve","module","exports","p"],"mappings":"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","file":"static/js/main.a9f950b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n/*\nThe list component will take the list of items passed in as a property\nand create an HTML list with those item. In this example, we are passing in the\nfiltered produce list, but this component can be used for other types of items\nas long as it has a name.\n*/\nclass List extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  /* renderList: maps across all cats passed into the component ('props') and\n   *             produces HTML elements that present the cat and all its\n   *             characteristics (both image and traits) to the user.\n   *\n   * @return: a set of HTML elements\n   */\n  renderList() {\n    const items = this.props.items.map(item => {\n      return (<div className=\"listing\">\n        <div class=\"listing-image\">\n          <img src={ require( './images/' + item.name + '.png' ) }/>\n        </div>\n        <div class=\"listing-text\">\n          <h2>{item.name}</h2>\n          <p><b>Age:</b> {item.age}</p>\n          <p><b>Gender Presentation:</b> {item.sex}</p>\n          <p><b>Breed:</b> {item.breed}</p>\n          <p><b>Habitat:</b> {item.habitat}</p>\n        </div>\n      </div>);\n    });\n    return items;\n  }\n\n  /* render: creates the dropdown HTML elements for all cats that have made it\n   *         through all of the searching, filtering, and sorting components\n   *\n   * @return: a set of HTML elements\n   */\n  render() {\n    return (\n      <div className=\"cat-listing\">\n        <div className=\"divider\"></div>\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component } from 'react';\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\nimport List from './List';\n\n/* The SortedListByAge Component takes in the list of cats filtered by\n * the FilteredListByHabitat component and sorts out all cats either by\n * youngest-to-oldest, oldest-to-youngest, or alphabetically (if the user\n * decides to sort by neither of the previous options).\n */\nclass SortedListByAge extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // btnState: the text that is displayed on the dropdown button\n    // sortingMethod: the type of sorting the user indicated\n    this.state = {\n      btnState: \"Nothing Specific\",\n      sortingMethod: \"\"\n    };\n  }\n\n  /* onDropdownChoice: sets the state of 'sortingMethod' to the input and sets\n   *                   the state of 'btnState' to relatively match the input\n   *\n   * @param: eventKey - the filtering type chosen by the user tied to the\n   *                    eventKey of a MenuItem\n   */\n  onDropDownChoice = (eventKey) => {\n    if (eventKey == \"YoungToOld\") {\n      this.setState({btnState: \"Young to Old\"});\n      this.setState({sortingMethod: eventKey});\n    } else if (eventKey == \"OldToYoung\") {\n      this.setState({btnState: \"Old to Young\"});\n      this.setState({sortingMethod: eventKey});\n    } else {\n      this.setState({btnState: \"Nothing Specific\"});\n      this.setState({sortingMethod: \"\"});\n    }\n  }\n\n  /* sortItems: returns a sorting function that correlates to which way the\n   *            user wants to sort the cats by.\n   *\n   * @return: a function used for sorting the list of elements\n   */\n  sortItems = () => {\n    if (this.state.sortingMethod == \"YoungToOld\") {\n      return this.props.items.sort(\n        function (a,b) {\n          return a.age - b.age;\n        });\n    } else if (this.state.sortingMethod == \"OldToYoung\") {\n      return this.props.items.sort(\n        function (a,b) {\n          return b.age - a.age;\n        });\n    } else {\n      return this.props.items.sort(\n        function (a,b) {\n          if (a.name < b.name) { return -1; }\n          else if (a.name > b.name) { return 1; }\n          else { return 0; }\n        });\n    }\n  }\n\n  /* render: creates the dropdown HTML elements for sorting by age\n   *         and throws the filtered list of items into the List\n   *         Component for presenting the final list  of cats to the user.\n   *\n   * @return: a set of HTML elements\n   */\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"sorted-list-by-age dropdown\">\n          <h3>Sort Age By:</h3>\n          <DropdownButton bsStyle=\"info\" className=\"dropdownBtn\" title={this.state.btnState}>\n            <MenuItem eventKey=\"YoungToOld\" onSelect={this.onDropDownChoice}>Youngest to Oldest</MenuItem>\n            <MenuItem eventKey=\"OldToYoung\" onSelect={this.onDropDownChoice}>Oldest to Youngest</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey=\"NoSort\" onSelect={this.onDropDownChoice}>Nothing Specific</MenuItem>\n          </DropdownButton>\n        </div>\n        <List items={this.sortItems()} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SortedListByAge;\n","import React, { Component } from 'react';\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\nimport SortedListByAge from './SortedListByAge';\n\n/* The FilteredListByHabitat Component takes in the list of cats filtered by\n * the FilteredListByGenderPresentation component and filters out all cats that\n * have the type of habitat indicated by the user input\n */\nclass FilteredListByHabitat extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // habitat: stores the current choice of habitat the user indicated\n    // filterDisplay: stores the text on the button to present to the user\n    this.state = {\n      habitat: \"\",\n      filterDisplay: \"Nothing Specific\"\n    };\n  }\n\n  /* filterItem: checks if the current dropdown choice matches any given item's\n   *             'habitat' field\n   *\n   * @param: item - any given item in the list of cats passed into the Component\n   * @return: a boolean - true if the item's habitat field matches the state's\n   *          habitat field\n   */\n  filterItem = (item) => {\n    return (item.habitat.search(this.state.habitat) !== -1);\n  }\n\n  /* onDropdownChoice: sets the state of 'habitat' to the input and sets the state\n   *                   of 'filterDisplay' to relatively match the input\n   *\n   * @param: eventKey - the filtering type chosen by the user tied to the\n   *                    eventKey of a MenuItem\n   */\n  onDropDownChoice = (eventKey) => {\n    this.setState({habitat: eventKey});\n    if (eventKey == \"\") {\n      this.setState({filterDisplay: \"Nothing Specific\"});\n    } else {\n      this.setState({filterDisplay: eventKey});\n    }\n  }\n\n  /* render: creates the dropdown HTML elements for filtering by habitat\n   *         and throws the filtered list of items into the SortedListByAge\n   *         Component for sorting.\n   *\n   * @return: a set of HTML elements\n   */\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"filter-list-by-habitat dropdown\">\n          <h3>Filter Habitat By:</h3>\n          <DropdownButton bsStyle=\"info\" className=\"dropdownBtn\" title={this.state.filterDisplay}>\n            <MenuItem eventKey=\"Outdoor\" onSelect={this.onDropDownChoice}>Outdoor</MenuItem>\n            <MenuItem eventKey=\"Indoor\" onSelect={this.onDropDownChoice}>Indoor</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey=\"\" onSelect={this.onDropDownChoice}>Nothing Specific</MenuItem>\n          </DropdownButton>\n        </div>\n        <SortedListByAge items={this.props.items.filter(this.filterItem)} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FilteredListByHabitat;\n","import React, { Component } from 'react';\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\nimport FilteredListByHabitat from './FilteredListByHabitat';\n\n/* The FilteredListByGenderPresentation Component takes in the list of cats\n * filtered by the SearchByName component and filters out all cats that have the\n * type of gender presentation indicated by the user input\n */\nclass FilteredListByGenderPresentation extends Component {\n  constructor(props) {\n    super(props);\n\n    // sex: stores the current choice of gender presentation the user indicated\n    // filterDisplay: stores the text on the button to present to the user\n    this.state = {\n      sex: \"\",\n      filterDisplay: \"Nothing Specific\"\n    };\n  }\n\n  /* filterItem: checks if the current dropdown choice matches any given item's\n   *             'sex' field\n   *\n   * @param: item - any given item in the list of cats passed into the Component\n   * @return: a boolean - true if the item's sex field matches the state's\n   *         sex field\n   */\n  filterItem = (item) => {\n    // Checks if the current search term is contained in this item\n    return (item.sex.search(this.state.sex) !== -1);\n  }\n\n  /* onDropdownChoice: sets the state of 'sex' to the input and sets the state\n   *                   of 'filterDisplay' to relatively match the input\n   *\n   * @param: eventKey - the filtering type chosen by the user tied to the\n   *                    eventKey of a MenuItem\n   */\n  onDropdownChoice = (eventKey) => {\n    this.setState({sex: eventKey});\n    // if the user wants to filter by nothing in particular\n    if (eventKey == \"\") {\n      this.setState({filterDisplay: \"Nothing Specific\"});\n    // if the user wants to filter by masculine, feminine, or androgynous\n    } else {\n      var displayText = eventKey + \" Features\";\n      this.setState({filterDisplay: displayText});\n    }\n  }\n\n  /* render: creates the dropdown HTML elements for filtering by gender presentation\n   *         and throws the filtered list of items into the FilteredListByHabitat\n   *         Component for further filtering.\n   *\n   * @return: a set of HTML elements\n   */\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"filter-list-by-gender dropdown\">\n          <h3>Filter Gender Presentation By:</h3>\n          <DropdownButton bsStyle=\"info\" className=\"dropdownBtn\" title={this.state.filterDisplay}>\n            <MenuItem eventKey=\"Masculine\" onSelect={this.onDropdownChoice}>Masculine Features</MenuItem>\n            <MenuItem eventKey=\"Feminine\" onSelect={this.onDropdownChoice}>Feminine Features</MenuItem>\n            <MenuItem eventKey=\"Androgynous\" onSelect={this.onDropdownChoice}>Androgynous Features</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey=\"\" onSelect={this.onDropdownChoice}>Nothing Specific</MenuItem>\n          </DropdownButton>\n        </div>\n        <FilteredListByHabitat items={this.props.items.filter(this.filterItem)} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FilteredListByGenderPresentation;\n","import React, { Component } from 'react';\nimport FilteredListByGenderPresentation from './FilteredListByGenderPresentation';\n\n/* The SearchByName Component takes in the list of cats created in App.js and\n * filters out all cats that have a name containing any of the text input by\n * the user in the search bar.\n */\nclass SearchByName extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // search: stores the input of the user to compare to the list of cats\n    this.state = {\n      search: \"\"\n    };\n  }\n\n  /* onSearch: sets the state of 'search' to the value input by the user in\n   *           the search bar\n   *\n   * @param: event - the text input from the user\n   */\n  onSearch = (event) => {\n    this.setState({search: event.target.value.trim().toLowerCase()});\n  }\n\n  /* filterItem: Checks if the current search term is contained in this item\n   *\n   * @param: item - any given item within the list of cats\n   * @return: a boolean - true if the current search term is contained\n   *          in the item, false otherwise\n   */\n  filterItem = (item) => {\n    return (item.name.toLowerCase().search(this.state.search) !== -1);\n  }\n\n  /* render: creates the title and input search bar HTML elements and throws\n   *         the filtered list of items into the FilteredListByGenderPresentation\n   *         Component for further filtering.\n   *\n   * @return: a set of HTML elements\n   */\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"search-items\">\n          <h1>Find a Cool Cat</h1>\n          <input type=\"text\" className=\"search-input\" placeholder=\"Search Name\" onChange={this.onSearch} />\n        </div>\n        <FilteredListByGenderPresentation items={this.props.items.filter(this.filterItem)}/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SearchByName;\n","import React, { Component } from 'react';\nimport './App.css';\nimport FilteredListByGenderPresentation from './FilteredListByGenderPresentation';\nimport SearchByName from './SearchByName';\n\n/* This list of cats that is passed into the SearchByName component.\n *\n * The cats are distinguished by name, sex (or gender presentation), breed,\n * age, and habitat.\n */\nconst cats = [\n  {name: \"Pickle\", sex: \"Masculine\", breed: \"Maine Coon\", age: \"5\", habitat: \"Outdoor\"},\n  {name: \"Nugget\", sex: \"Feminine\", breed: \"Scottish Fold\", age: \"2\", habitat: \"Indoor\"},\n  {name: \"Felicity\", sex: \"Androgynous\", breed: \"Ragdoll\", age: \"7\", habitat: \"Outdoor\"},\n  {name: \"Pnut\", sex: \"Masculine\", breed: \"Cornish Rex\", age: \"1\", habitat: \"Indoor\"},\n  {name: \"Fletcher\", sex: \"Feminine\", breed: \"Sphynx\", age: \"1\", habitat: \"Outdoor\"},\n  {name: \"Chesty\", sex: \"Androgynous\", breed: \"La Perm\", age: \"5\", habitat: \"Indoor\"},\n  {name: \"Cloud\", sex: \"Masculine\", breed: \"Persian\", age: \"10\", habitat: \"Outdoor\"},\n  {name: \"Lionel\", sex: \"Feminine\", breed: \"Turkish Van\", age: \"6\", habitat: \"Indoor\"},\n  {name: \"Roxy\", sex: \"Androgynous\", breed: \"Maine Coon\", age: \"4\", habitat: \"Outdoor\"},\n  {name: \"Snoozy\", sex: \"Masculine\", breed: \"Ragdoll\", age: \"3\", habitat: \"Indoor\"},\n  {name: \"Izzy\", sex: \"Feminine\", breed: \"Pixie Bob\", age: \"9\", habitat: \"Outdoor\"},\n  {name: \"Gonzales\", sex: \"Androgynous\", breed: \"Persian\", age: \"12\", habitat: \"Indoor\"},\n  {name: \"Tora\", sex: \"Masculine\", breed: \"Ragamuffin\", age: \"1\", habitat: \"Outdoor\"},\n  {name: \"Billabong\", sex: \"Feminine\", breed: \"Bengal\", age: \"3\", habitat: \"Indoor\"},\n  {name: \"Amber\", sex: \"Androgynous\", breed: \"Ragamuffin\", age: \"8\", habitat: \"Outdoor\"}\n]\n\nclass App extends Component {\n\n  /* The method that renders the list of cats by throwing the list above into\n   * a series of searching, filtering, and sorting Components. Each sub-component\n   * renders relevant HTML items that are presented on the webpage.\n   *\n   * @return: a set of HTML elements\n   */\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchByName className=\"entire-page\" items={cats}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./Amber.png\": 81,\n\t\"./Billabong.png\": 82,\n\t\"./Chesty.png\": 83,\n\t\"./Cloud.png\": 84,\n\t\"./Felicity.png\": 85,\n\t\"./Fletcher.png\": 86,\n\t\"./Gonzales.png\": 87,\n\t\"./Izzy.png\": 88,\n\t\"./Lionel.png\": 89,\n\t\"./Nugget.png\": 90,\n\t\"./Pickle.png\": 91,\n\t\"./Pnut.png\": 92,\n\t\"./Roxy.png\": 93,\n\t\"./Snoozy.png\": 94,\n\t\"./Tora.png\": 95\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 80;","module.exports = __webpack_public_path__ + \"static/media/Amber.9e521fc1.png\";","module.exports = __webpack_public_path__ + \"static/media/Billabong.f3d4df56.png\";","module.exports = __webpack_public_path__ + \"static/media/Chesty.51921afa.png\";","module.exports = __webpack_public_path__ + \"static/media/Cloud.975a4bf7.png\";","module.exports = __webpack_public_path__ + \"static/media/Felicity.88783461.png\";","module.exports = __webpack_public_path__ + \"static/media/Fletcher.8d0486f7.png\";","module.exports = __webpack_public_path__ + \"static/media/Gonzales.e1c63a1e.png\";","module.exports = __webpack_public_path__ + \"static/media/Izzy.bd587907.png\";","module.exports = __webpack_public_path__ + \"static/media/Lionel.abac143c.png\";","module.exports = __webpack_public_path__ + \"static/media/Nugget.04fe3b05.png\";","module.exports = __webpack_public_path__ + \"static/media/Pickle.7467739f.png\";","module.exports = __webpack_public_path__ + \"static/media/Pnut.ba7b7081.png\";","module.exports = __webpack_public_path__ + \"static/media/Roxy.23bdd587.png\";","module.exports = __webpack_public_path__ + \"static/media/Snoozy.6ec8d79d.png\";","module.exports = __webpack_public_path__ + \"static/media/Tora.5197846f.png\";"],"sourceRoot":""}